# App Features

The project is a minimal Android application written in Kotlin. Below are all of the current features and how they operate.

## 1. Main Activity
* Displays a "Hello World" text view after a PIN check.
* Contains a **Bin Locator** button. When pressed, this launches the `BinLocatorActivity` using an explicit intent.
* Limitations: the main screen only provides navigation to the bin locator and does not contain additional functionality.

## 1a. Pin Activity
* Shown at app start to request a 4-digit PIN.
* Accepted pins are downloaded from a Google Sheet.
* On success the user is taken to the main menu. Invalid pins show a Snackbar error.

## 2. Bin Locator Activity
* Provides a camera preview using **CameraX**. When the screen loads it requests the camera permission if needed and starts the camera.
* Offers a **Rotate** button that toggles the screen between portrait and landscape. Captured images are aligned using EXIF metadata so the "TOP" indicator always matches the device orientation.
* Includes a **Capture** button. When tapped it captures a photo to a temporary file, rotates the image based on the current setting and runs **ML Kit Text Recognition**.
* Shows a green **TOP** label with a bounding box overlay so users align text correctly. The captured image is cropped to this region before processing.
* Supports pinch-to-zoom on the preview with a slider and 1x reset button for precise adjustments.
* In landscape orientation the **Capture** button is vertical on the right edge and the zoom controls center between the bounding box and the screen bottom.
* Recognised text appears in a persistent text view at the top of the screen.
* Each OCR line and its bounding box height are printed to logcat for debugging.
* OCR results are cleaned using `OcrParser` before barcode scanning.
* Only the extracted roll number and customer name are displayed back to the user, simplifying the on-screen text.
* The parser strips any prefix text before the first space in the roll number so only the numeric portion remains.
* **Get Release** still uses ML Kit barcode scanning. **Set Bin** now opens a menu
  with bins 19-65 and "Floor BR/BL". Selected bins set `BIN=<value>` on the
  roll number line, replacing any previous value.
* When roll, customer and bin are all present a **Send Record** button appears
  allowing upload to the warehouse database. On success the text view clears.
  If the server responds with an error, its message is displayed to the user.
* Errors are shown via Snackbars instead of only logcat output.
* Limitations:
  * Error handling for other parts of the app is still minimal.

## 3. Image Utilities
* `ImageUtils.rotateBitmap()` rotates a bitmap by a specified angle using a `Matrix`. If the angle is a multiple of 360 the input bitmap is returned unmodified.
* Limitations: performs a full bitmap copy which may consume memory for large images.

## 4. Unit and Instrumentation Tests
* Unit tests verify package naming and a rotation helper using **Robolectric** (currently ignored due to missing dependencies in CI).
* Instrumentation tests run on an emulator or device to ensure the Hello World text is shown and the Bin Locator screen launches correctly.
* Limitations: test coverage is minimal and the image rotation test is skipped.

## 5. Helper Scripts
* `decode_gradle_wrapper.py` restores the Gradle wrapper JAR from a base64 encoded file.
* `install_android_sdk.sh` installs the Android SDK commandâ€‘line tools. It uses the bundled archive in the repository when available and prints instructions for setting `ANDROID_HOME`.
* Limitations: a network connection is still required for additional packages if they are not cached locally.

- Uses a MaterialComponents theme defined in styles.xml
